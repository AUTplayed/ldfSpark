plugins {
    //id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'codes.fepi'
version '1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    api group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    implementation group: 'eu.infomas', name: 'annotation-detector', version: '3.0.5'
    api 'com.sparkjava:spark-core:2.7.2'
    api "com.sparkjava:spark-template-mustache:2.7.1"
}


task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}



publishing {
    publications {
        ldf(MavenPublication) {
            from components.java

            artifact sourceJar
            artifact javadocJar

            pom {
                name = rootProject.name
                description = 'A java library for bootstrapping a web application with java backend, and ldf+mustache frontend'
                url = 'https://github.com/AUTplayed/ldfSpark'
                organization {
                    name = 'codes.fepi'
                    url = 'https://fepi.codes'
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/AUTplayed/ldfSpark/issues'
                }
                licenses {
                    license {
                        name = 'MIT'
                        url ='https://github.com/AUTplayed/ldfSpark/blob/master/LICENSE'
                        distribution = 'repo'
                    }
                }
                scm {
                    url = 'https://github.com/AUTplayed/ldfSpark'
                    connection = 'scm:git:git://github.com/AUTplayed/ldfSpark.git'
                    developerConnection = 'scm:git:ssh://git@github.com/AUTplayed/ldfSpark.git'
                }
                developers {
                    developer {
                        name = 'AUTplayed'
                    }
                }
            }

        }
    }

    repositories {
        /*maven {
            url = "file://${buildDir}/../../repo"
        }*/
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

signing {
    sign publishing.publications.ldf
}


model {
    tasks.generatePomFileForLdfPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
}